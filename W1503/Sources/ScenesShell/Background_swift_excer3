import Scenes
import Igis

  /*
     This class is responsible for rendering the background.
   */


class Background : RenderableEntity {

    var rectangle : Rectangle
    var rect : Rect
    var rectangles = [Rectangle]()
    var horizontal = 5
    var vertical = 5
    let per_width = 200
    let per_height = 50
    let startX = 20
    let startY = 20
    init() {

        //start
        var x_axis = startX
        var y_axis = startY

        var i = 0
        repeat {
    
           
      
            var j = 0         
            repeat {
              
                rect = Rect(topLeft:Point(x:x_axis, y:y_axis), size:Size(width:per_width,height:per_height))
                rectangle = Rectangle(rect:rect, fillMode:.stroke)
                rectangles.append(rectangle)
                print("adding x_axis = \(x_axis) y = \(y_axis)")
                j = j + 1
                x_axis = x_axis + per_width
            } while j < horizontal 
            i = i + 1
            if(i % 2 != 0)
            {
             
                x_axis = startX + per_width/2
            }else {
                x_axis = startX
            }
            y_axis = y_axis + per_height 
            print("i =  \(i) and x_axis = \(x_axis) y = \(y_axis)") 
          
        }  while i < vertical 
          
   
          // Using a meaningful name can be helpful for debugging
          super.init(name:"Background")
    }
    
    override func setup(canvasSize:Size, canvas:Canvas) {


        
        print("size = \(rectangles)")
        for myRectangle in rectangles {

            canvas.render(myRectangle)
        }
}
}
